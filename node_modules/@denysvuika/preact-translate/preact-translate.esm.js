import{createContext as n,h as t}from"preact";import{useState as a,useCallback as e,useEffect as o,useMemo as l}from"preact/hooks";function r(n,t){return[n,!n||n.endsWith("/")?"":"/",t,".json"].join("")}function c(n,t){let a=n;return t&&Object.keys(t).forEach((n=>{const e=t[n],o=new RegExp(`{${n}}`,"gm");a=a.replace(o,e.toString())})),a}function s(n,t,a){let e=n[t];if(!e)return a;const o=a.split(".");let l="";do{l+=o.shift();const n=e[l];void 0===n||"object"!=typeof n&&o.length?o.length?l+=".":e=a:(e=n,l="")}while(o.length);return e}let i={};const g={root:"",lang:"en",fallbackLang:"en"};const f=n(null),u="assets",h="en",b="en",d=n=>{const{t:d,setLang:L,lang:k,isReady:p}=function(n,t){n=Object.assign({},g,n),i=t||i;const[f,u]=a(n.lang),[h,b]=a(i),[d,L]=a(!1),k=e((async t=>{if(!h[t]){L(!1);try{const a=r(n.root,t),e=await fetch(a);i[t]=await e.json()}catch(n){console.error(`Failed to load language data for ${t}:`,n)}finally{b({...i}),L(!0)}}}),[h,n.root]);o((()=>{(async()=>{await k(n.fallbackLang),await k(f)})()}),[f,k,n.fallbackLang]);const p=l((()=>(t,a)=>{if(!h.hasOwnProperty(f))return t;let e=s(h,f,t);return e===t&&f!==n.fallbackLang&&(e=s(h,n.fallbackLang,t)),c(e,a)}),[h,f,n.fallbackLang]);return{lang:f,setLang:u,t:p,isReady:d}}({root:n.root||u,lang:n.lang||h,fallbackLang:n.fallbackLang||b},n.translations);return t(f.Provider,{value:{t:d,setLang:L,lang:k,isReady:p}},n.children)};export{f as TranslateContext,d as TranslateProvider,c as format,r as getResourceUrl,s as getValue};
